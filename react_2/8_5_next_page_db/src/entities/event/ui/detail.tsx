import { RouterOutput } from '@/shared/api';
import type { FC } from 'react';

// --- –¢–∏–ø—ã –∏ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã ---

type EventDetailProps = {
	data: NonNullable<RouterOutput['event']['findUnique']>;
	image: string;
};

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Intl.DateTimeFormat –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.
 * @param date - –î–∞—Ç–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞ Date.
 * @returns –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç—ã –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
 */
const formatEventDate = (date: Date | string | null | undefined): string => {
	if (!date) {
		return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
	}
	try {
		// Intl.DateTimeFormat - —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
		return new Intl.DateTimeFormat('ru-RU', {
			year: 'numeric',
			month: 'long',
			day: 'numeric',
			hour: '2-digit',
			minute: '2-digit',
		}).format(new Date(date as string));
	} catch (error) {
		console.error('Invalid date provided:', error);
		return '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã';
	}
};

// --- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã-–∏–∫–æ–Ω–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Ç–∏–ø–∞ Heroicons) ---

const CalendarIcon: FC = () => (
	<svg xmlns="http://www.w3.org/2000/svg"
		 className="h-5 w-5"
		 fill="none"
		 viewBox="0 0 24 24"
		 stroke="currentColor"
		 strokeWidth={2}>
		<path strokeLinecap="round"
			  strokeLinejoin="round"
			  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
	</svg>
);

const UsersIcon: FC = () => (
	<svg xmlns="http://www.w3.org/2000/svg"
		 className="h-6 w-6"
		 fill="none"
		 viewBox="0 0 24 24"
		 stroke="currentColor"
		 strokeWidth={2}>
		<path strokeLinecap="round"
			  strokeLinejoin="round"
			  d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M15 21a6 6 0 00-9-5.197M15 11a4 4 0 110-5.292" />
	</svg>
);

// --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ---

export const EventDetail = ({ data, image }: EventDetailProps) => {
	const { title, description, eventDate, participations } = data;
	const formattedDate = formatEventDate(eventDate);

	return (
		// 1. –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º —Ñ–æ–Ω–æ–º –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
		<main className="min-h-screen bg-slate-50 font-sans antialiased">
			<div className="container mx-auto px-4 py-12 sm:py-16">
				{/* 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º <article> –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
				<article className="max-w-5xl mx-auto bg-white rounded-2xl shadow-xl overflow-hidden">
					<div className="grid grid-cols-1 lg:grid-cols-5">

						{/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
						<div className="lg:col-span-2">
							<img
								src={image}
								alt={`–û–±–ª–æ–∂–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ${title}`}
								className="w-full h-64 lg:h-full object-cover" // object-cover –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∏—Å–∫–∞–∂–µ–Ω–∏–µ
							/>
						</div>

						{/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –î–µ—Ç–∞–ª–∏ */}
						<div className="lg:col-span-3 p-8 md:p-12 flex flex-col gap-8">

							{/* 3. <header> –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
							<header className="flex flex-col gap-4">
								<h1 className="text-4xl md:text-5xl font-extrabold text-slate-900 tracking-tight">
									{title}
								</h1>
								<div className="flex items-center gap-2 text-indigo-600 font-semibold">
									<CalendarIcon />
									{/* –¢–µ–≥ <time> —É–ª—É—á—à–∞–µ—Ç —Å–µ–º–∞–Ω—Ç–∏–∫—É –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ –∏ —Å–∫—Ä–∏–Ω-—Ä–∏–¥–µ—Ä–æ–≤ */}
									<time dateTime={eventDate ? new Date(eventDate as unknown as string).toISOString() : undefined}>
										{formattedDate}
									</time>
								</div>
							</header>

							{/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è */}
							{description && (
								<p className="text-lg text-slate-600 leading-relaxed">
									{description}
								</p>
							)}

							{/* 4. –°–µ–∫—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ª—É—á—à–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
							<section aria-labelledby="participants-heading">
								<div className="flex items-center gap-3 mb-6">
									<UsersIcon />
									<h2 id="participants-heading"
										className="text-2xl font-bold text-slate-900">
										–£—á–∞—Å—Ç–Ω–∏–∫–∏ ({participations.length})
									</h2>
								</div>

								{participations.length > 0 ? (
									<ul className="grid grid-cols-1 sm:grid-cols-2 gap-4">
										{participations.map(({ user }) => (
											<li key={user.id}
												className="flex items-center gap-3 bg-slate-100 p-3 rounded-lg hover:bg-slate-200 transition-colors duration-200">
												{/* –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞ */}
												<div className="w-10 h-10 rounded-full bg-indigo-200 text-indigo-700 flex items-center justify-center font-bold shrink-0">
													{user.name ? user.name.charAt(0).toUpperCase() : 'üë§'}
												</div>
												<span className="font-medium text-slate-800 truncate">{user.name || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫'}</span>
											</li>
										))}
									</ul>
								) : (
									<div className="text-center py-8 px-4 bg-slate-100 rounded-lg border border-dashed">
										<p className="text-slate-500">
											–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è. <br /> –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º!
										</p>
									</div>
								)}
							</section>
						</div>
					</div>
				</article>
			</div>
		</main>
	);
};